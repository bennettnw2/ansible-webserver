---
- name: Test the website
  hosts: webservers
  become: yes
  become_user: root

  tasks:
  - name: Check port 80 is listening on managed node
    wait_for:
      port: 80
      state: started
      timeout: 3

  - name: Verify apache is available remotely
    uri:
      url: http://{{ ansible_host }}/index.html
    delegate_to: localhost
     
  - name: Stat apache2
    stat:
      path: /usr/sbin/apache2
    register: i

  - name: Fail if apache2 doesn't exist
    assert:
      that:
        - "i.stat.exists"
      fail_msg: "/usr/sbin/apache2 does not exist"
      success_msg: "/usr/sbin/apache2 exists"

  - name: Verify apache2 is enabled
    shell: systemctl list-unit-files  | grep apache2.service | awk '{print $2}'
    register: c

  - name: Fail if apache2 is not enabled
    assert:
      that:
        - "c.stdout == 'enabled'"
      fail_msg: "apache2 service is not enabled"
      success_msg: "apachw2 service is enabled"

  - name: Stat index.html
    stat:
      path: /var/www/html/index.html
    register: a

  - name: Confirm that index.html exists
    assert:
      that:
        - "a.stat.exists"
      fail_msg: "index.html does not exist"
      success_msg: "index.html does exist!"

  - name: Confirm that index.html is owned by root
    assert:
      that:
        - "a.stat.pw_name == 'root'"
      fail_msg: "index.html is not owned by root"
      success_msg: "index.html is owned by root!"

  - name: Stat var.html
    stat:
      path: /var/www/html/vars.html
    register: v

  - name: Confirm that vars.html exists
    assert:
      that:
        - "v.stat.exists"
      fail_msg: "vars.html does not exist"
      success_msg: "vars.html does exist!"

  - name: Confirm that var.html is owned by root
    assert:
      that:
        - "v.stat.pw_name == 'root'"
      fail_msg: "vars.html is not owned by root"
      success_msg: "vars.html is owned by root!"
